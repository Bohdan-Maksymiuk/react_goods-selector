{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","goodSelector","selectedGood","setState","good","concat","goodRemover","filter","getListInformation","list","listCopy","lastGood","pop","length","join","this","className","type","onClick","map","classNames","selected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAOMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,GACd,EAAKC,UAAS,SAAAJ,GACZ,IAAMK,EAAO,CAACF,GAGd,MAAO,CACLF,cAHoBD,EAAMC,cAAcK,OAAOD,Q,EAQrDE,YAAc,SAACJ,GACb,EAAKC,UAAS,SAAAJ,GAIZ,MAAO,CACLC,cAJoBD,EAAMC,cACzBO,QAAO,SAAAH,GAAI,OAAIA,IAASF,U,EAQ/BM,mBAAqB,SAACC,GACpB,IAAMC,EAAQ,YAAOD,GAEfE,EAAWD,EAASE,MAE1B,OAAQH,EAAKI,QACX,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUJ,EAAK,GAAf,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAKK,KAAK,SAApB,iBACF,QACE,MAAM,GAAN,OAAUJ,EAASI,KAAK,MAAxB,gBAAqCH,EAArC,mB,4CAIN,WAA2B,IAAD,OAChBX,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,UAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKP,mBAAmBR,KAED,IAAzBA,EAAca,QACb,gCACE,sBAAMG,UAAU,aAAhB,qCACA,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKf,SAAS,CAAEH,cAAe,MAFhD,kBASJ,6BACGH,EAAgBsB,KAAI,SAAAf,GAAI,OACvB,qBAAeY,UAAU,WAAzB,UACE,sBACEA,UAAWI,IACT,iBACA,CAAEC,SAAUrB,EAAcsB,SAASlB,KAHvC,SAMGA,IAEFJ,EAAcsB,SAASlB,GAEpB,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKZ,YAAYF,IAFlC,oBAQA,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKjB,aAAaG,IAFnC,sBAnBGA,e,GAlEHmB,IAAMC,WAoGT1B,ICzHf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a75bf20d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\ntype Good = string;\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: Good[]\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  goodSelector = (selectedGood: Good) => {\n    this.setState(state => {\n      const good = [selectedGood];\n      const selectedGoods = state.selectedGoods.concat(good);\n\n      return {\n        selectedGoods,\n      };\n    });\n  };\n\n  goodRemover = (selectedGood: Good) => {\n    this.setState(state => {\n      const selectedGoods = state.selectedGoods\n        .filter(good => good !== selectedGood);\n\n      return {\n        selectedGoods,\n      };\n    });\n  };\n\n  getListInformation = (list: Good[]) => {\n    const listCopy = [...list];\n\n    const lastGood = listCopy.pop();\n\n    switch (list.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${list[0]} is selected`;\n      case 2:\n        return `${list.join(' and ')} are selected`;\n      default:\n        return `${listCopy.join(', ')} and ${lastGood} are selected`;\n    }\n  };\n\n  render(): React.ReactNode {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App box\">\n        <h1 className=\"title is-1\">\n          {this.getListInformation(selectedGoods)}\n        </h1>\n        {selectedGoods.length !== 0 && (\n          <div>\n            <span className=\"title is-4\">Reset your selections -</span>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              X\n            </button>\n          </div>\n        )}\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good} className=\"listItem\">\n              <span\n                className={classNames(\n                  'listItem__text',\n                  { selected: selectedGoods.includes(good) },\n                )}\n              >\n                {good}\n              </span>\n              {selectedGoods.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.goodRemover(good)}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.goodSelector(good)}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}